import random


class Knapsack01Problem:
    def __init__(self):
        self.items = []
        self.max_weight = 400
        self.__init_data()

    def __init_data(self):
        self.items = [
            ("地图", 9, 150), ("指南针", 13, 35), ("水", 153, 200),
            ("三明治", 50, 160), ("葡萄糖", 15, 60), ("罐头", 68, 45),
            ("香蕉", 27, 60), ("苹果", 39, 40), ("奶酪", 23, 30),
            ("啤酒", 52, 10), ("防晒霜", 11, 70), ("相机", 32, 30),
            ("T恤衫", 24, 15), ("裤子", 48, 10), ("雨伞", 73, 40),
            ("防水裤子", 42, 70), ("防水外套", 43, 75), ("钱包", 22, 80),
            ("太阳镜", 7, 20), ("毛巾", 18, 12), ("袜子", 4, 50),
            ("书", 30, 10)
        ]

    def getValue(self, zeroOneList):
        total_value = 0
        total_weight = 0
        for i in range(len(zeroOneList)):
            if zeroOneList[i] == 1:
                item_weight = self.items[i][1]
                if total_weight + item_weight <= self.max_weight:
                    total_weight += item_weight
                    total_value += self.items[i][2]
                else:
                    break  # 超过最大重量时停止添加更多物品
        return total_value

    def printItems(self, zeroOneList):
        total_weight = 0
        total_value = 0
        print("选定物品:")
        for i in range(len(zeroOneList)):
            if zeroOneList[i] == 1:
                name, weight, value = self.items[i]
                if total_weight + weight <= self.max_weight:
                    total_weight += weight
                    total_value += value
                    print(f"{name}: 重量={weight}, 价值={value}")
                else:
                    break  # 超过最大重量时停止添加更多物品
        print(f"总重量: {total_weight}, 总价值: {total_value}")

    def main(self):
        # 创建实例
        kp = Knapsack01Problem()

        # 创建一个随机解
        zeroOneList = [random.randint(0, 1) for _ in range(len(kp.items))]

        # 输出随机解
        print("Random Solution:", zeroOneList)

        # 输出解的详情
        kp.printItems(zeroOneList)
        print("解的总价值:", kp.getValue(zeroOneList))


# 运行主方法
Knapsack01Problem().main()
